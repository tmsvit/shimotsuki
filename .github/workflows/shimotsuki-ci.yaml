name: shimotsuki-cicd

on:
  push:
    branches: ["prod"]

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_PASS }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./build/git_update_prod.sh -v patch

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: prod/kusagakure
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f dockerfiles/Dockerfile.prod .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client
  
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
  
        
      - name: SSH into remote server and deploy docker image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: prod/shimotsuki
            IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
            SSH_HOST: ${{ secrets.SSH_HOST }}
            SSH_USER: ${{ secrets.SSH_USER }}
            SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
            sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
            ECR_REPOSITORY="prod/shimotsuki"
            IMAGE_TAG="${{ steps.increment-git-tag.outputs.git-tag }}"
            aws --region us-east-2 ecr get-login-password | docker login --username AWS --password-stdin 735800467934.dkr.ecr.us-east-2.amazonaws.com
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            if [ "$(docker ps -q -f name=shimotsuki-prod)" ]; then
              docker stop shimotsuki-prod
              docker rm shimotsuki-prod
            elif [ "$(docker ps -a -q -f name=shimotsuki-prod)" ]; then
              docker rm shimotsuki-prod
            else
              echo "shimotsuki-prod container does not exist."
            fi
            docker run -p 3000:3000 -d --name shimotsuki-prod $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            EOF